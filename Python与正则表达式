 学习资料来源：http://deerchao.net/tutorials/regex/regex.htm#mission，不是我的文
 上面的链接里有一些小错误，但是不影响有基础的朋友的阅读——链接文可能在某个需要转义的地方没有转义，但这不太影响知识传播。
 由于链接文是针对C#写的，有些地方可能和python不一样
 常用元字符整理：  
    \d 数字 
    \D 与\d相反
    \w 字母、数字、下划线、汉字
    \W 与\w相反
    {n}出现n次 eg.\d{n}
    {n,}至少出现n次
    {n,m}出现n到m次之间
    \b位置匹配 eg.\b\naive\b
    \b 匹配任意不是单词开头或结尾的位置
    * 匹配0或多次
    + 匹配1或多次
    \s 匹配任意种的空白字符
    \S 与\s相反
    [^xyz] 匹配任意不是xyz序列中的字符 e.g <a[^>]+> 匹配了一个长度大于1，以a开头的字符串
    （） 分组 eg.
            {
            (exp) 捕获满足exp的式子并形成一个组
            断言（各种断言的名字还没有理解）：
                {
                (?=exp)匹配后面是exp的句子 ：零宽度正预测先行断言
                (?<=)匹配前面是exp的句子   ：零宽度正回顾后发断言
                (?!exp) 匹配后面不是exp的句子 ：零宽度负预测先行断言
                (?<!exp) 匹配前面不是exp的句子：零宽度负后顾后发断言
                }
            }
     贪婪与懒惰的概念：
     a.*?b 匹配以a开头，以b结尾的最短的字符串（形成的一个个组 ）
     而
     a.*b  匹配以a开头，以b结尾的最长的字符串
     *?    重复任意次但尽可能少
     +?    重复一次以上但尽可能少
     ??    重复0或1次但尽可能少
     {n,m} 重复n到m次但尽可能少
     {n,}  重复n次以上但尽可能少
     
     
    
    
